Array
  - 배열은 같은 형태의 데이터들을 여러 개 선언할 때 사용되며, 한 번 생성된 후에는 그 크기를 바꿀 수 없다.
  - 배열의 크기가 정해진 후부터 메모리에 할당되며, heap이라는 저장소에 배열의 첫 번째 데이터의 주소가 저장된다.
  - 값이 지정되지 않은 요소들은 각각 default 값이 설정되는데, 정수인 경우 0, 실수인 경우 0.0, 불인 경우 false, 문자열인 경우 null이다.
  - 2차원 배열은 heap 저장소에 배열의 [0][0]의 주소가 저장되며, 실제 메모리에는 배열의 모든 데이터가 연속적으로 저장된다.

◎ 선언 및 초기화
  - 자료형[] 변수명 = new 자료형[크기];
    int[] number = new int[n];
  - 자료형 변수명[] = new 자료형[크기];
   String name[] = new String[n];
  - 자료형[] 변수명 = new 자료형[] {요소, 요소, 요소, ...};
   int[] number = new int[] {a, b, c, d};
  - 자료형 변수명[] = {요소, 요소, 요소, ...};
   int number[] = {a, b, c, d};

◎ 배열의 길이
  - 배열.length를 통해배열의 크기를 구할 수 있다.
  
◎ 배열의 복사
  - 배열의 복사는 System Class의 arraycopy 메소드를 이용한다.
  - 배열 a의 인덱스 i부터 n개의 요소를 배열 b의 인덱스 j 위치로 이동할 때,
  - System.arraycopy(a, i, b, j, n);

◎ 2차원 배열
  - 배열의 요소가 배열로 이루어진 배열로, 행렬처럼 이용할 수 있다.
  - 자료형 변수명[][] = new 자료형[행 크기][열 크기];
    int number[][] = new int[x][y];
  - 자료형[][] 변수명 = new 자료형[행 크기][열 크기];
    int[][] number = new int[x][y];
  - 자료형 변수명[][] = {
      { 배열 },
      { 배열 },
      { 배열 },
         .
         .
         .
    }
    int number[][] = {
      { a },
      { b },
      { c },
         .
         .
         . 
    };
  - 배열의 행마다 길이를 달리하여 설정할 수 있는데, 먼저 행의 길이만을 입력하여 선언한 뒤, 값을 할당할 때 열의 길이를 달리하면 된다.
    int num[][] = new int[n][]
    num[0] = new int[a];
    num[1] = new int[b];
    num[2] = new int[c];
             .
             .
             .
    num[n] = new int[m];
    각각 길이가 a, b, c, ..., m인 배열들이 요소로 이루어진, 길이가 n인 이차원 배열이 만들어진다.
    
