Loop
  - 조건이 true인 한 블록 안의 실행문을 계속 반복하며, 조건이 false가 되면 실행문을 무시한다.

● for loop
  for(initialization; condition; final-expression) { 
    statement;
  }
  - initialization: 초기값으로 변수를 선언한다. 여기서 선언되는 변수는 주로 카운트에 이용된다.
  - condition: 조건식을 만들어 반복문이 종료될 수 있도록 한다.
  - final-expression: 각 반복의 마지막(statement 종료 후)에 실행되는 부분으로, 주로 카운터 변수의 값을 증감시킨다.
  - statement: 조건식이 참일 때 실행되는 코드이다.

◎ 다음과 같이 for문의 일부를 생략함으로써 무한 루프를 만들 수 있는데, 이를 통해 프로그램이 종료되지 않도록 만들 수 있다.
  - for(initialization; condition; ) { statement }
  - for(initialization; ; ) { statement }
  - for( ; ; ) { statement }

● while loop
  while(condition) { 
    statement;
  }

● do...while loop
  do {
    statement;
  } while(condition);
  - 실행문을 일단 한 번 실행한 뒤 조건을 확인하여 while loop의 실행 여부를 결정한다.

● Enhanced for loop
  for(type Variable:Array) {
    statement;
  }
  - 컬렉션 및 배열에서 간단한 구문을 제공한다.
  - for의 콜론 앞 부분에서 배열의 요소와 일치하는 변수를 선언하고, 콜론 뒷 부분에 배열명을 입력하면 배열의 모든 요소에 대해서 반복문을 시행한다.
  
  for(type Array1:Array2) {
    for(type Variable:Array1) {
      statement;
    }
  }
  - 위와 같이 변수를 Array로 설정하면 2차원 배열의 모든 요소에 대해서도 반복문을 시행할 수 있다.
