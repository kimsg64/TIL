On one line
 - if 조건문을 한 줄로 간단하게 표현할 수 있다.
 - 리스트를 반환하는 for 반복문은 한 줄로 간단하게 표현할 수 있다.
 - lambda 함수를 통해 함수를 한 줄로 정의할 수 있다.

● Code1 if Condition else Code2
 - 아래 if 조건문을 한 줄로 표현한 것이다.
   if Condition:
       Code1
   else:
       Code2

● 리스트 내포
 - arr = [Code for i in Sequence]
 - 아래 for 반복문을 한 줄로 표현한 것이다.
   arr = []
   for i in Sequence:
       arr.append(Code)

● lambda 함수
 - def 함수로 정의할 때보다 메모리 사용량이 적다.
 - func = lambda parameter: Code
 - 아래 함수를 lambda 함수를 이용해 한 줄로 표현한 것이다.
   def func(parameter):
       Code
 - 객체의 정렬, 문자열 포맷팅에 자주 활용된다.


◎ 예시
 - arr = [i for i in range(5) if i % 2 == 0]
 - range(5)의 모든 요소인 i에 대해, 짝수인 i를 리스트로 반환한다.
 # arr = [0, 2, 4]

 - arr = [i+j for i in [1, 3] for j in range(9, 11)]
 - [1, 3]의 모든 요소인 i와, range(9, 11)의 모든 요소인 j에 대해, i+j를 리스트로 반환한다.
 # arr = [10, 11, 12, 13]

 - (lambda a, b: a if a + b % 2 == 0 else b)(4, 5)
 - a, b에 대해, a + b가 짝수이면 a를, 홀수이면 b를 반환하는 함수를 만들고, a = 4, b = 5를 할당한다.
 # 5
 
 - people = [('Joel', 21, '76ers'), ('Anthony', 3, 'Lakers'), ('Damian', 0, 'Blazers')]
 - by_name = sorted(people, key = lambda x: x[0])
 - 튜플의 0번째 인덱스를 기준으로 정렬한다.
 # by_name = [('Anthony', 3, 'Lakers'), ('Damian', 0, 'Blazers'), ('Joel', 21, '76ers')]
 
 - (lambda x, y: "{} x {} = {}".format(x, y, x * y))(5, 6)
 # '5 x 6 = 30'
