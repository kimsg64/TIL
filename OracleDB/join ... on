join ... on
  - select fieldA, fieldB from tableA join tableB on tableA.common=tableB.common 형태로 사용한다.
  - tableA에 속하는 fieldA와 tableB에 속하는 fieldB를, 둘 이상의 테이블이 공통으로 가진 common field로 연결하여 동시에 선택한다.
  - select fieldA, fieldB from tableA, tableB where tableA.common=tableB.common 형태로 사용하기도 하나, 위의 방식이 더 권장된다.

● Equi Join
  - 동등 조인은, join ... on으로 연결되는 각각의 테이블의 필드(join 조건)가 등로(=)로 비교될 수 있을 때 사용한다.
  
● Non-Equi Join
  - 비동등 조인은, join ... on으로 연결되는 각각의 테이블의 필드(join 조건)가 등호(=)로는 정확히 비교할 수 없고, Between ... and, 부등호(>, <), is null, is not null, in, not in 등으로 비교할 수 있을 때 사용한다.
  
● Self Join
  - 같은 테이블 내에서 Join이 필요할 때 사용한다.
  - 같은 테이블에 두 개의 별명을 지어서 이를 이용해 Join을 할 수 있다.

● Out Join
  - null 데이터가 발생하는 경우, null 데이터를 포함하여 출력해 준다.
  - 두 테이블 중, null이 발생하는 테이블의 필드에 (+)를 추가적으로 작성한다.
  - right outer join: 두 테이블 중 오른쪽 테이블에서 null이 발생하는 경우에 join 대신 작성한다.
  - left outer join: 두 테이블 중 왼쪽 테이블에서 null이 발생하는 경우에 join 대신 작성한다.
  - full outer join: 두 테이블의 모든 null을 표시해 준다.

● Join ... using(field)
  - 두 테이블이 동일한 이름의 필드를 가지고 있을 때, 이를 기준으로 join을 하는 경우라면 on 대신 using을 사용할 수 있다.
