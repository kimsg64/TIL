Sub Query
  - 서브 쿼리는 다른 SQL 문장의 절에 사용된 select 문장을 의미한다.

● 단일 행 서브 쿼리
  - select의 결과로 하나의 행을 반환하는 서브 쿼리다.
  - 단일 행 연산자인 =,>,>=,<,<=,<>,!=만 사용할 수 있다.

● 다중 행 서브 쿼리
  - select의 결과로 복수의 행을 반환하는 서브 쿼리다.
  - IN, NOT IN, ANY, ALL, EXISTS를 사용할 수 있다.
  - ANY는 조건을 하나라도 만족하는 모든 행을 반환한다.
  - ALL은 조건을 모두 만족하는 행만을 반환한다.
  - EXISTS는 조건을 만족하는 행이 있는지를 확인하여 반환한다.

● 다중 열 서브 쿼리
  - 서브 쿼리의 결과로 복수의 행을 반환하는 서브 쿼리다.
  - 쌍 비교는 서브 쿼리가 한 번 실행되면서 모든 조건을 검색해서 주 쿼리로 넘겨 준다. 
  - select field from table where (field1, field2) in (select field1, field2 from table where conditions)에서 field1, field2에 대한 조건을 모두 검색하여 주 쿼리로 넘겨 준다.
  - 비쌍 비교: 서브 쿼리가 복수의 조건별로 사용되어 결과를 주 쿼리로 넘겨 준다.
  - select field from table where field1 in (select field1 from table where condition1) and field2 in (select field2 from table where condition2)에서, and로 연결된 두 개의 서브 쿼리의 결과를 주 쿼리로 넘겨 준다.

● From절 상의 서브 쿼리
  - from 절에서도 서브 쿼리를 사용할 수 있다.

● 상관관계 서브 쿼리
  - 주 쿼리의 행이 서브 쿼리의 조건에 이용되고 다시 주 쿼리로 값을 반환하는 처리 방식이다.

● 집합 쿼리
  - union: 두 테이블 모두에 존재하는 동일한 필드의 합집합을 구해 준다.
  - union all: 두 테이블 모두에 존재하는 동일한 필드의 중복을 포함한 모든 값을 구해 준다.
  - intersect: 두 테이블 모두에 존재하는 동일한 필드의 교집합을 구해 준다.
  - minus: 두 테이블 모두에 존재하는 동일한 필드의 차집합을 구해 준다. 즉, 첫 번째 테이블의 필드에서 첫 번째 테이블과 두 번째 테이블의 교집합을 뺀 나머지를 구해 준다.
